models:
  image: tp33/django
  container_name: proj_models
  external_links:
    - mysql:db
  volumes:
    - .:/app
  ports:
    - "8001:8000"
  command: bash -c "pip install django-mysql && python /app/models/manage.py makemigrations api && python /app/models/manage.py migrate && python /app/models/manage.py loaddata /app/models/db.json && python /app/models/manage.py test api && mod_wsgi-express start-server --working-directory /app/models --reload-on-changes /app/models/models/wsgi.py"

exp:
  image: tp33/django
  container_name: proj_exp
  links:
      - models:models-api
      - kafka:kafka
      - es:es
  ports:
      - "8002:8000"
  volumes:
      - .:/app
  command: bash -c "pip install requests && mod_wsgi-express start-server --working-directory /app/exp --reload-on-changes /app/exp/exp/wsgi.py"

web:
  container_name: proj_web
  image: tp33/django
  links:
      - exp:exp-api
  ports:
      - "8000:8000"
  volumes:
      - .:/app
  command: bash -c "pip install requests && mod_wsgi-express start-server --working-directory /app/web --reload-on-changes --log-to-terminal /app/web/web/wsgi.py"

web1:
  container_name: web1
  image: tp33/django
  links:
      - exp:exp-api
  ports:
      - "8003:8000"
  volumes:
      - .:/app
  command: bash -c "pip install requests && mod_wsgi-express start-server --working-directory /app/web --reload-on-changes --log-to-terminal /app/web/web/wsgi.py"

web2:
  container_name: web2
  image: tp33/django
  links:
      - exp:exp-api
  ports:
      - "8004:8000"
  volumes:
      - .:/app
  command: bash -c "pip install requests && mod_wsgi-express start-server --working-directory /app/web --reload-on-changes --log-to-terminal /app/web/web/wsgi.py"

web3:
  container_name: web3
  image: tp33/django
  links:
      - exp:exp-api
  ports:
      - "8005:8000"
  volumes:
      - .:/app
  command: bash -c "pip install requests && mod_wsgi-express start-server --working-directory /app/web --reload-on-changes --log-to-terminal /app/web/web/wsgi.py"

kafka:
   image: spotify/kafka
   container_name: kafka
   environment:
      ADVERTISED_HOST: kafka
      ADVERTISED_PORT: 9092
   hostname: kafka

es:
   image: elasticsearch:2.0
   container_name: es
   ports:
      - "9200:9200"

batch:
   image: tp33/django
   container_name: batch
   links:
      - kafka:kafka
      - es:es
   volumes:
      - .:/app
   command: bash -c "python /app/batch/script.py"

selenium-chrome:
  image: selenium/standalone-chrome
  container_name: selenium-chrome
  links:
    - web:web
  ports:
    - "4444:4444"

selenium-test:
  image: tp33/django
  container_name: selenium
  links:
    - selenium-chrome:selenium-chrome
    - web:web
  volumes:
    - ./selenium:/app
  command: bash -c "pip install selenium==3.7.0 && sleep 35 && python /app/selenium_script.py"

haproxy:
  container_name: haproxy
  image: haproxy
  #build : ./haproxy
  ports:
    - "80:80"
  links:
    - web:web
    - web1:web1
    - web2:web2
    - web3:web3

